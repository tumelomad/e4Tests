@model Test1.Models.UserViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Edit", "Home", FormMethod.Post, new { id = "editForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit User</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "txtName" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger", id = "txtNameError" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", id = "txtSurname" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger", id = "txtNameError" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CellPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CellPhoneNumber, new { htmlAttributes = new { @class = "form-control", id = "txtCellphoneNumber" } })
                @Html.ValidationMessageFor(model => model.CellPhoneNumber, "", new { @class = "text-danger", id = "txtCellphoneNumberError" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" id="editSave"/>
            </div>
        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $("#editSave").click(function (ev) {
            ev.preventDefault();

            var txtName = $("#txtName");
            var txtSurname = $("#txtSurname");
            var txtCellphoneNumber = $("#txtCellphoneNumber");

            var validity = validateEntries(txtName.val(), txtSurname.val(), txtCellphoneNumber.val());

            if (!validity) {
                return;
            }

            $("#editForm").submit();
        });
    });

    function validateEntries(name, surname, cellphoneNumber) {
        var formValid = true;
        if (!name) {
            $("#txtName").addClass("is-invalid");
            $("#txtNameError").html("Name is required.");
            formValid = false;
        } else {
            $("#txtName").removeClass("is-invalid");
            $("#txtNameError").html("");
        }

        if (!surname) {
            $("#txtSurname").addClass("is-invalid");
            $("#txtSurnameError").html("Surname is required.");
            formValid = false;
        } else {
            $("#txtSurname").removeClass("is-invalid");
            $("#txtSurnameError").html("");
        }

        var reg = new RegExp(/^\d+$/);
        if (!cellphoneNumber) {
            $("#txtCellphoneNumber").addClass("is-invalid");
            $("#txtCellphoneNumberError").html("Cellphone number is required.");
            formValid = false;
        } else if (!reg.test(cellphoneNumber)) {
            $("#txtCellphoneNumber").addClass("is-invalid");
            $("#txtCellphoneNumberError").html("Cellphone number should only be numeric.");
            formValid = false;
        } else if (cellphoneNumber.length != 10) {
            $("#txtCellphoneNumber").addClass("is-invalid");
            $("#txtCellphoneNumberError").html("Cellphone number is the wrong length.");
            formValid = false;
        } else {
            $("#txtCellphoneNumber").removeClass("is-invalid");
            $("#txtCellphoneNumberError").html("");
        }

        return formValid;
    }
</script>

<div>
    @Html.ActionLink("Back to List", "Get")
</div>